basePath: /
definitions:
  model.DeleteResponse:
    properties:
      message:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.Pet:
    properties:
      age:
        type: integer
      date_added:
        type: string
      description:
        type: string
      price:
        type: number
      type:
        $ref: '#/definitions/model.Type'
    type: object
  model.PostPet:
    properties:
      age:
        type: integer
      description:
        type: string
      price:
        type: number
      type:
        $ref: '#/definitions/model.Type'
    type: object
  model.Type:
    enum:
    - cat
    - dog
    type: string
    x-enum-varnames:
    - Cat
    - Dog
  model.UpdatePet:
    properties:
      description:
        type: string
      price:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  description: pet microservice
  title: Pet Store API
  version: "1.0"
paths:
  /pets:
    get:
      description: Возвращает список всех питомцев
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Pet'
            type: array
      summary: Получить список питомцев
      tags:
      - pets
    post:
      consumes:
      - application/json
      description: Добавляет нового питомца в список
      parameters:
      - description: Информация о питомце
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/model.PostPet'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Pet'
        "400":
          description: Ошибка при обработке запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Добавить нового питомца
      tags:
      - pets
  /pets/{id}:
    delete:
      description: Удаляет питомца из списка по его идентификатору
      parameters:
      - description: ID питомца
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Питомец успешно удалён
          schema:
            $ref: '#/definitions/model.DeleteResponse'
        "404":
          description: Питомец не найден
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Удалить питомца по ID
      tags:
      - pets
    get:
      description: Возвращает информацию о питомце по его идентификатору
      parameters:
      - description: ID питомца
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Pet'
        "404":
          description: Питомец не найден
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить питомца по ID
      tags:
      - pets
    put:
      consumes:
      - application/json
      description: Обновляет информацию о питомце по его идентификатору
      parameters:
      - description: ID питомца
        in: path
        name: id
        required: true
        type: string
      - description: Обновленная информация о питомце
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Pet'
        "400":
          description: Ошибка при обработке запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Питомец не найден
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Обновить питомца по ID
      tags:
      - pets
swagger: "2.0"
